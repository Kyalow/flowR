% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patternSelection_module.R
\name{patternSelectionInput}
\alias{patternSelectionInput}
\alias{patternSelection}
\title{Select variables based on pattern (or a regular expression)}
\usage{
patternSelectionInput(id)

patternSelection(input, output, session, choices = reactiveValues())
}
\arguments{
\item{id}{shiny id}

\item{input}{shiny input}

\item{output}{shiny output}

\item{session}{shiny session}

\item{choices}{reactivevalues object containing vectors of possible choices for each selection variable}
}
\value{
a reactivevalues object with:
\describe{
  \item{values}{: selected values}
  \item{variable}{: selected variable}
}
}
\description{
Select variables based on pattern (or a regular expression)

patternSelection module server function
}
\examples{
\dontrun{
library(shiny)

 if (interactive()){
  
  ui <- fluidPage(
    selectizeInput("selection",
                   label = "selected values",
                   choices = NULL, selected = NULL, multiple = TRUE),
    patternSelectionInput("pattern_module")
  )
  
  server <- function(input, output, session) {
    
    choices <- reactiveValues()
    
    observe({
      gs <- load_gs("./inst/ext/gs")
      choices$sample <- pData(gs)$name
      choices$subset <- gs_get_pop_paths(gs)
    })
    
    res <- callModule(patternSelection, "pattern_module", choices = choices)
    
    observe({
      if(!is.null(res$variable)){
        updateSelectizeInput(session, "selection", choices = choices[[res$variable]], selected = res$values)
      }
    })
    
  }
  
  shinyApp(ui, server)
  
}}
}
